From b47625e7c74c572727415505f8ecf3fa09e34fd3 Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Sat, 13 Mar 2021 14:20:03 -0500
Subject: [PATCH 14/23] Support Samsung R multi-cams

Change-Id: If46f385e8dd16185cbf37ab083e6a1242e1d1555
---
 services/camera/libcameraservice/Android.bp               | 1 +
 .../libcameraservice/common/hidl/HidlProviderInfo.cpp     | 8 +++++++-
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/services/camera/libcameraservice/Android.bp b/services/camera/libcameraservice/Android.bp
index 25fd8451a9..3136bbd30f 100644
--- a/services/camera/libcameraservice/Android.bp
+++ b/services/camera/libcameraservice/Android.bp
@@ -176,6 +176,7 @@ cc_library_shared {
         "android.hardware.camera.device@3.7",
         "android.hardware.camera.device-V2-ndk",
         "vendor.samsung.hardware.camera.provider@3.0",
+        "vendor.samsung.hardware.camera.provider@4.0",
         "media_permission-aidl-cpp",
     ],
 
diff --git a/services/camera/libcameraservice/common/hidl/HidlProviderInfo.cpp b/services/camera/libcameraservice/common/hidl/HidlProviderInfo.cpp
index d498ecbee5..587d3eeda7 100644
--- a/services/camera/libcameraservice/common/hidl/HidlProviderInfo.cpp
+++ b/services/camera/libcameraservice/common/hidl/HidlProviderInfo.cpp
@@ -28,6 +28,7 @@
 
 #include <android/hardware/camera/device/3.7/ICameraDevice.h>
 #include <vendor/samsung/hardware/camera/provider/3.0/ISehCameraProvider.h>
+#include <vendor/samsung/hardware/camera/provider/4.0/ISehCameraProvider.h>
 
 namespace {
 const bool kEnableLazyHal(property_get_bool("ro.camera.enableLazyHal", false));
@@ -173,7 +174,9 @@ status_t HidlProviderInfo::initializeHidlProvider(
     }
 
     auto samsungCast = vendor::samsung::hardware::camera::provider::V3_0::ISehCameraProvider::castFrom(interface);
+    auto samsung40Cast = vendor::samsung::hardware::camera::provider::V4_0::ISehCameraProvider::castFrom(interface);
     auto samsungProvider = samsungCast.isOk() ? static_cast<sp<vendor::samsung::hardware::camera::provider::V3_0::ISehCameraProvider>>(samsungCast) : nullptr;
+    auto samsung40Provider = samsung40Cast.isOk() ? static_cast<sp<vendor::samsung::hardware::camera::provider::V4_0::ISehCameraProvider>>(samsung40Cast) : nullptr;
 
     hardware::Return<bool> linked = interface->linkToDeath(this, /*cookie*/ mId);
     if (!linked.isOk()) {
@@ -211,6 +214,7 @@ status_t HidlProviderInfo::initializeHidlProvider(
         status = idStatus;
         if (status == Status::OK) {
             for (auto& name : cameraDeviceNames) {
+		    ALOGE("Listing camera ID %s", name.c_str());
                 uint16_t major, minor;
                 std::string type, id;
                 status_t res = parseDeviceName(name, &major, &minor, &type, &id);
@@ -224,7 +228,9 @@ status_t HidlProviderInfo::initializeHidlProvider(
             }
         } };
     hardware::Return<void> ret;
-    if(samsungProvider != nullptr && property_get_bool("persist.sys.phh.samsung.camera_ids", false))
+    if(samsung40Provider != nullptr && property_get_bool("persist.sys.phh.samsung.camera_ids", false))
+        ret = samsung40Provider->sehGetCameraIdList(cb);
+    else if(samsungProvider != nullptr && property_get_bool("persist.sys.phh.samsung.camera_ids", false))
         ret = samsungProvider->sehGetCameraIdList(cb);
     else
         ret = interface->getCameraIdList(cb);
-- 
2.25.1

