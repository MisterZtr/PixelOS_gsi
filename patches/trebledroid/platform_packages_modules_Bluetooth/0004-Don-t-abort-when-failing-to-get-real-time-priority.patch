From 72d6a401e5f84260e8f339c628085397dfe0092c Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Sun, 17 Oct 2021 17:17:13 -0400
Subject: [PATCH 4/8] Don't abort when failing to get real-time priority

On some devices (like OP6), for unknown reason, trying to go to realtime
fails with EPERM.
There is no good reason to actually require real-time, so don't fail
when we don't get it
This fixes gabeldorsche on OP6
Not yet legacy bluetooth stack

Change-Id: Id25dac186628e933185bdfd640498004459b375a
---
 system/btif/src/btif_a2dp_sink.cc   |  2 +-
 system/btif/src/btif_a2dp_source.cc |  2 +-
 system/osi/src/alarm.cc             | 12 +++++++++++-
 system/stack/btu/btu_task.cc        |  2 +-
 4 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/system/btif/src/btif_a2dp_sink.cc b/system/btif/src/btif_a2dp_sink.cc
index fb7e8f3607..2d68d49c84 100644
--- a/system/btif/src/btif_a2dp_sink.cc
+++ b/system/btif/src/btif_a2dp_sink.cc
@@ -197,7 +197,7 @@ bool btif_a2dp_sink_init() {
   /* Schedule the rest of the operations */
   if (!btif_a2dp_sink_cb.worker_thread.EnableRealTimeScheduling()) {
 #if defined(__ANDROID__)
-    LOG(FATAL) << __func__
+    LOG(ERROR) << __func__
                << ": Failed to increase A2DP decoder thread priority";
 #endif
   }
diff --git a/system/btif/src/btif_a2dp_source.cc b/system/btif/src/btif_a2dp_source.cc
index 2a538390fb..1b0ffab492 100644
--- a/system/btif/src/btif_a2dp_source.cc
+++ b/system/btif/src/btif_a2dp_source.cc
@@ -365,7 +365,7 @@ static void btif_a2dp_source_startup_delayed() {
   LOG_INFO("%s: state=%s", __func__, btif_a2dp_source_cb.StateStr().c_str());
   if (!btif_a2dp_source_thread.EnableRealTimeScheduling()) {
 #if defined(__ANDROID__)
-    LOG(FATAL) << __func__ << ": unable to enable real time scheduling";
+    LOG(ERROR) << __func__ << ": unable to enable real time scheduling";
 #endif
   }
   if (!bluetooth::audio::a2dp::init(&btif_a2dp_source_thread)) {
diff --git a/system/osi/src/alarm.cc b/system/osi/src/alarm.cc
index 2f0a27ea71..ec0f71c232 100644
--- a/system/osi/src/alarm.cc
+++ b/system/osi/src/alarm.cc
@@ -678,7 +678,17 @@ static bool timer_create_internal(const clockid_t clock_id, timer_t* timer) {
   sigevent.sigev_notify = SIGEV_THREAD;
   sigevent.sigev_notify_function = (void (*)(union sigval))timer_callback;
   sigevent.sigev_notify_attributes = &thread_attr;
-  if (timer_create(clock_id, &sigevent, timer) == -1) {
+
+  int ret = timer_create(clock_id, &sigevent, timer);
+  if (ret == -1) {
+       LOG_ERROR("%s failed to create timer with RT err %s... Try again without RT", __func__, strerror(errno));
+      // Recreate timer without RT priority
+      memset(&sigevent, 0, sizeof(sigevent));
+      sigevent.sigev_notify = SIGEV_THREAD;
+      sigevent.sigev_notify_function = (void (*)(union sigval))timer_callback;
+      ret = timer_create(clock_id, &sigevent, timer);
+  }
+  if (ret == -1) {
     LOG_ERROR("%s unable to create timer with clock %d: %s", __func__, clock_id,
               strerror(errno));
     if (clock_id == CLOCK_BOOTTIME_ALARM) {
diff --git a/system/stack/btu/btu_task.cc b/system/stack/btu/btu_task.cc
index 2aa2510c04..e50de320c4 100644
--- a/system/stack/btu/btu_task.cc
+++ b/system/stack/btu/btu_task.cc
@@ -122,7 +122,7 @@ void main_thread_start_up() {
   }
   if (!main_thread.EnableRealTimeScheduling()) {
 #if defined(__ANDROID__)
-    LOG(FATAL) << __func__ << ": unable to enable real time scheduling";
+    LOG(ERROR) << __func__ << ": unable to enable real time scheduling";
 #else
     LOG(ERROR) << __func__ << ": unable to enable real time scheduling";
 #endif
-- 
2.25.1

