From 45a7b2cf4e8d9c6fa5211adc4308e30a8d0b056d Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Thu, 25 Jan 2024 15:20:10 -0500
Subject: [PATCH 26/26] When setting ro.apex.updatable, actually set the value

Before this change, we were only changing the override, but on newest
Android 14 vendor, they don't explicitly set ro.apex.updatable=true
so there is no override.
But we do want apex for them (notably for vendor apex),
hence always set based on kernel version.

This fixes boot on Samsung Galaxy S24
---
 init/property_service.cpp | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/init/property_service.cpp b/init/property_service.cpp
index 679bece50..3a2118c0c 100644
--- a/init/property_service.cpp
+++ b/init/property_service.cpp
@@ -803,17 +803,22 @@ static void LoadProperties(char* data, const char* filter, const char* filename,
             std::string error;
             if (CheckPermissions(key, value, context, cr, &error) == PROP_SUCCESS) {
                 auto it = properties->find(key);
+                const char *new_value = value;
+
+                if(strcmp("ro.apex.updatable", key) == 0) {
+                    new_value = kernel_supports_capex() ? "true" : "false";
+                }
                 if (it == properties->end()) {
-                    (*properties)[key] = value;
-                } else if (it->second != value) {
+                    (*properties)[key] = new_value;
+                } else if (it->second != new_value) {
                     LOG(WARNING) << "Overriding previous property '" << key << "':'" << it->second
                                  << "' with new value '" << value << "'";
-                    if(strcmp("ro.apex.updatable", key) == 0 && !kernel_supports_capex()) {
+                    if(strcmp("ro.apex.updatable", key) == 0) {
                         LOG(WARNING) << "... Ignored apex by kernel version";
                     } else if(strstr(key, "adb") || strstr(key, "secure") || strstr(key, "ro.logd.kernel")) {
                         LOG(WARNING) << "... Ignored";
                     } else {
-                        it->second = value;
+                        it->second = new_value;
                     }
 		}
             } else {
-- 
2.25.1

